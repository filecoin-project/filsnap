name: Manual/Periodic Tests
env:
  CI: true
  FORCE_COLOR: 1
  PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/ms-playwright
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      metamask-tag:
        description: 'Metamask tag to download. ie. "v10.27.0"'
      metamask-seed:
        description: Seed to use for Metamask
      metamask-password:
        description: Password to use for Metamask
      metamask-snap-id:
        description: 'Snap ID to install in Metamask. ie. "npm:filsnap"'
      metamask-snap-version:
        description: Snap Version to install Metamask
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: latest
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm
      - run: pnpm install
      - run: pnpm --filter filsnap exec playwright install --with-deps chromium
      - run: pnpm -r --filter filsnap run test
        id: tests
        env:
          GITHUB_TOKEN: ${{ github.token }}
          METAMASK_TAG: ${{ inputs.metamask-tag }}
          METAMASK_MNEMONIC: ${{ inputs.metamask-seed }}
          METAMASK_PASSWORD: ${{ inputs.metamask-password }}
          METAMASK_SNAP_ID: ${{ inputs.metamask-snap-id }}
          METAMASK_SNAP_VERSION: ${{ inputs.metamask-snap-version }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: packages/snap/playwright-report/
          retention-days: 30
      - name: Notify Slack
        if: always() && github.event_name == 'schedule' && steps.check_report.outputs.files_exists == 'true' && steps.tests.outcome != 'success'
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notify_when: failure
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: 'Filsnap tests {status_message}!'
          message_format: '{emoji} *<{workflow_url}|{workflow}>* workflow {status_message} in the <{run_url}|{job}> job.'
          footer: '<{repo_url}|{repo}>'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
