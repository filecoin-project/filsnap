@import "@acab/reset.css";
@import "water.css";

@import "react-toastify/dist/ReactToastify.css";

:root {
  --toastify-color-dark: #161f27;
}

.Toastify__close-button > svg {
  max-inline-size: none;
}

@media (prefers-color-scheme: dark) {
  ::selection {
    /* chrome for some reason doesnt inherit the custom variable here */
    background-color: #1c76c5;
  }
}

:where(:root) body {
  display: grid;
  height: 100vh;
  height: 100dvh;
  padding: 0;
  margin: 0;
  max-width: 100%;
}

.App {
  display: flex;
  max-width: 100vw;
  max-width: 100dvw;
  margin: 20px auto;
  padding: 0 20px;
  word-wrap: break-word;
  flex-direction: column;
}

@media screen and (min-width: 960px) {
  .App {
    max-width: 800px;
  }
}

.Box {
  background-color: var(--background-alt);
  border-radius: 6px;
  padding: 15px 15px;
  overflow: auto;
}
.Box input {
  border: 1px solid var(--border);
}

.Box-svg {
  display: inline;
  vertical-align: middle;
}

.Box > h1,
h2,
h3,
h4 {
  margin-top: 0px;
}

.Grid {
  --fl-gap-h: 1em; /* This needs to have a unit for calc() below */
  --fl-gap-v: 1em; /* This needs to have a unit for calc() below */
  display: flex;
  flex-wrap: wrap;
  gap: var(--fl-gap-v, 0px) var(--fl-gap-h, 0px);
}

.Grid > * {
  flex: 0 0 100%;
}

.Grid > .Cell100 {
  flex: 0 0 100%;
}

@media screen and (min-width: 640px) {
  .Grid > * {
    flex: 0 0 calc(1 / 2 * 100% - (1 - 1 / 2) * var(--fl-gap-h));
  }

  .Grid > .Cell50 {
    flex: 0 0 calc(1 / 2 * 100% - (1 - 1 / 2) * var(--fl-gap-h));
  }

  .Grid > .Cell25 {
    flex: 0 0 calc(0.25 * 100% - (1 - 0.25) * var(--fl-gap-h));
  }

  .Grid > .Cell75 {
    flex: 0 0 calc(0.75 * 100% - (1 - 0.75) * var(--fl-gap-h));
  }
}

@media screen and (min-width: 960px) {
  .Grid > * {
    flex: 0 0 calc(1 / 3 * 100% - (1 - 1 / 3) * var(--fl-gap-h));
  }
}

/* Utils */

.u-AlignCenter {
  text-align: center;
  align-items: center;
  display: flex;
  justify-content: center;
}
.u-FullWidth {
  width: 100%;
}

.icon {
  display: inline-block;
  vertical-align: text-bottom;
}

.icon-copy {
  cursor: pointer;
}
.icon-copy:active {
  scale: 1.1;
}
